[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Stat112 Notebook",
    "section": "",
    "text": "Introduction\nThis is my online notebook for COMP/STAT112 course taken at Macalester College. Please, use the side bar on the left for navigation.\nHi! This is my portfolio for stat 112."
  },
  {
    "objectID": "activities/README.html",
    "href": "activities/README.html",
    "title": "Activities",
    "section": "",
    "text": "All activities live here."
  },
  {
    "objectID": "activities/data_viz.html#exercise-1-research-questions",
    "href": "activities/data_viz.html#exercise-1-research-questions",
    "title": "1  Data viz (Notes)",
    "section": "Exercise 1: Research questions",
    "text": "Exercise 1: Research questions\nLet’s dig into the hikes data, starting with the elevation and difficulty ratings of the hikes:\n\nhikes &lt;- read.csv(\"https://mac-stat.github.io/data/high_peaks.csv\")\n\n\nhead(hikes)\n\n             peak elevation difficulty ascent length time    rating\n1     Mt. Marcy        5344          5   3166   14.8 10.0  moderate\n2 Algonquin Peak       5114          5   2936    9.6  9.0  moderate\n3   Mt. Haystack       4960          7   3570   17.8 12.0 difficult\n4   Mt. Skylight       4926          7   4265   17.9 15.0 difficult\n5 Whiteface Mtn.       4867          4   2535   10.4  8.5      easy\n6       Dix Mtn.       4857          5   2800   13.2 10.0  moderate\n\n\n\nWhat features would we like a visualization of the categorical difficulty rating variable to capture?\n\n\nggplot(hikes, aes(x=rating))+ \n  geom_bar()\n\n\n\n\nWe would use a bar chart, because rating is categorical.\n\nWhat about a visualization of the quantitative elevation variable?\n\n\nggplot(hikes, aes(x=elevation))+ \n  geom_density()\n\n\n\n\nWe could use a density plot or histogram, because elevation is a quantitative variable."
  },
  {
    "objectID": "activities/data_viz.html#exercise-2-load-tidyverse",
    "href": "activities/data_viz.html#exercise-2-load-tidyverse",
    "title": "1  Data viz (Notes)",
    "section": "Exercise 2: Load tidyverse",
    "text": "Exercise 2: Load tidyverse\nWe’ll address the above questions using ggplot tools. Try running the following chunk and simply take note of the error message – this is one you’ll get a lot!\n\n# Use the ggplot function\nggplot(hikes, aes(x = rating))\n\nIn order to use ggplot tools, we have to first load the tidyverse package in which they live. Mainly, we’ve installed the package but need to tell R when we want to use it. Run the chunk below to load the library. You’ll need to do this within any .qmd file that uses ggplot().\n\n# Load the package\nlibrary(tidyverse)"
  },
  {
    "objectID": "activities/data_viz.html#exercise-3-bar-chart-of-ratings-part-1",
    "href": "activities/data_viz.html#exercise-3-bar-chart-of-ratings-part-1",
    "title": "1  Data viz (Notes)",
    "section": "Exercise 3: Bar chart of ratings (part 1)",
    "text": "Exercise 3: Bar chart of ratings (part 1)\nConsider some specific research questions about the difficulty rating of the hikes:\nHow many hikes fall into each category? Are the hikes evenly distributed among these categories, or are some more common than others?\nAll of these questions can be answered with: (1) a bar chart; of (2) the categorical data recorded in the rating column. First, set up the plotting frame:\n\nggplot(hikes, aes(x = rating))+ \n  geom_bar()\n\n\n\n\nModerate hikes are the most common hikes.\nThink about:\n\nWhat did this do? What do you observe?\nWhat, in general, is the first argument of the ggplot() function? Data\nWhat is the purpose of writing x = rating? Mapping the data\nWhat do you think aes stands for?!? Aesthetics"
  },
  {
    "objectID": "activities/data_viz.html#exercise-4-bar-chart-of-ratings-part-2",
    "href": "activities/data_viz.html#exercise-4-bar-chart-of-ratings-part-2",
    "title": "1  Data viz (Notes)",
    "section": "Exercise 4: Bar chart of ratings (part 2)",
    "text": "Exercise 4: Bar chart of ratings (part 2)\nNow let’s add a geometric layer to the frame / canvas, and start customizing the plot’s theme. To this end, try each chunk below, one by one. In each chunk, make a comment about how both the code and the corresponding plot both changed.\nNOTE:\n\nPay attention to the general code properties and structure, not memorization.\nNot all of these are “good” plots. We’re just exploring ggplot.\n\n\n# COMMENT on the change in the code and the corresponding change in the plot\nggplot(hikes, aes(x = rating)) +\n  geom_bar()\n\n\n\n\n\n# The x and y axes labels changed by using the labs layer \nggplot(hikes, aes(x = rating)) +\n  geom_bar() +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n\n\n\n\n# The bars are now blue by using the fill argument in the geom_bar function \nggplot(hikes, aes(x = rating)) +\n  geom_bar(fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n\n\n\n\n# The outline of the bars is orange now, using the color argument in geom_bar\nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n\n\n\n\n# The gray background is gone! \nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\")  +\n  labs(x = \"Rating\", y = \"Number of hikes\") +\n  theme_minimal()"
  },
  {
    "objectID": "activities/data_viz.html#exercise-5-bar-chart-follow-up",
    "href": "activities/data_viz.html#exercise-5-bar-chart-follow-up",
    "title": "1  Data viz (Notes)",
    "section": "Exercise 5: Bar chart follow-up",
    "text": "Exercise 5: Bar chart follow-up\n\nPart a\nReflect on the ggplot() code.\n\nWhat’s the purpose of the +? When do we use it? To add layers, themes, etc\nWe added the bars using geom_bar()? Why “geom”? Stands for geometric object\nWhat does labs() stand for? Labels\nWhat’s the difference between color and fill? Outline vs coloring inside the lines\n\n\n\nPart b\nIn general, bar charts allow us to examine the following properties of a categorical variable:\n\nobserved categories: What categories did we observe?\nvariability between categories: Are observations evenly spread out among the categories, or are some categories more common than others?\n\nWe must then translate this information into the context of our analysis, here hikes in the Adirondacks. Summarize here what you learned from the bar chart, in context.\nThe most common hike was moderate, followed by easy, followed by difficult.\n\n\nPart c\nIs there anything you don’t like about this barplot? For example: check out the x-axis again.\nI don’t like the order of the cateogries listed (it should be easy, moderate, difficult)"
  },
  {
    "objectID": "activities/data_viz.html#exercise-6-sad-bar-chart",
    "href": "activities/data_viz.html#exercise-6-sad-bar-chart",
    "title": "1  Data viz (Notes)",
    "section": "Exercise 6: Sad bar chart",
    "text": "Exercise 6: Sad bar chart\nLet’s now consider some research questions related to the quantitative elevation variable:\nAmong the hikes, what’s the range of elevation and how are the hikes distributed within this range (e.g. evenly, in clumps, “normally”)? What’s a typical elevation? Are there any outliers, i.e. hikes that have unusually high or low elevations?\nHere:\n\nConstruct a bar chart of the quantitative elevation variable.\nExplain why this might not be an effective visualization for this and other quantitative variables. (What questions does / doesn’t it help answer?)\n\n\nggplot(hikes, aes(x=elevation))+ \n  geom_bar()\n\n\n\n\nThe bars are so thin, because each individual elevation is not repeated (it is not categorical)."
  },
  {
    "objectID": "activities/data_viz.html#exercise-7-a-histogram-of-elevation",
    "href": "activities/data_viz.html#exercise-7-a-histogram-of-elevation",
    "title": "1  Data viz (Notes)",
    "section": "Exercise 7: A histogram of elevation",
    "text": "Exercise 7: A histogram of elevation\nQuantitative variables require different viz than categorical variables. Especially when there are many possible outcomes of the quantitative variable, it’s typically insufficient to simply count up the number of times we’ve observed a particular outcome (as the bar graph did above). It gives us a sense of ranges and typical outcomes, but not a good sense of how the observations are distributed across this range. We’ll explore two methods for graphing quantitative variables: histograms and density plots.\nHistograms are constructed by (1) dividing up the observed range of the variable into ‘bins’ of equal width; and (2) counting up the number of cases that fall into each bin. Check out the example below:\n\n\nPart a\nLet’s dig into some details.\n\nHow many hikes have an elevation between 4500 and 4700 feet? About 6 hikes\nHow many total hikes have an elevation of at least 5100 feet? About 2 hikes\n\n\n\nPart b\nNow the bigger picture. In general, histograms allow us to examine the following properties of a quantitative variable:\n\ntypical outcome: Where’s the center of the data points? What’s typical?\nvariability & range: How spread out are the outcomes? What are the max and min outcomes?\nshape: How are values distributed along the observed range? Is the distribution symmetric, right-skewed, left-skewed, bi-modal, or uniform (flat)?\noutliers: Are there any outliers, i.e. outcomes that are unusually large/small?\n\nWe must then translate this information into the context of our analysis, here hikes in the Adirondacks. Addressing each of the features in the above list, summarize here what you learned from the histogram, in context.\nMost hikes in this data set have an elevation from 4000ft to 4800ft. This data is right-skewed (uni modal). There don’t seem to be any extreme outliers. The data is not very spread out, and seems centered around 4400ft."
  },
  {
    "objectID": "activities/data_viz.html#exercise-8-building-histograms-part-1",
    "href": "activities/data_viz.html#exercise-8-building-histograms-part-1",
    "title": "1  Data viz (Notes)",
    "section": "Exercise 8: Building histograms (part 1)",
    "text": "Exercise 8: Building histograms (part 1)\n2-MINUTE CHALLENGE: Thinking of the bar chart code, try to intuit what line you can tack on to the below frame of elevation to add a histogram layer. Don’t forget a +. If it doesn’t come to you within 2 minutes, no problem – all will be revealed in the next exercise.\n\nggplot(hikes, aes(x = elevation))+\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "activities/data_viz.html#exercise-9-building-histograms-part-2",
    "href": "activities/data_viz.html#exercise-9-building-histograms-part-2",
    "title": "1  Data viz (Notes)",
    "section": "Exercise 9: Building histograms (part 2)",
    "text": "Exercise 9: Building histograms (part 2)\nLet’s build some histograms. Try each chunk below, one by one. In each chunk, make a comment about how both the code and the corresponding plot both changed.\n\n# COMMENT on the change in the code and the corresponding change in the plot\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n# Outlines are white \nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\") \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n# Bins are blue \nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", fill = \"blue\") \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n# Bins are not blue anymore, and x and y labels have been added\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\") +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n# Bin width increased, resulting in fewer bins \nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 1000) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n\n\n\n\n# Bin width is now 5, so there are far more bins \nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 5) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n\n\n\n\n# The bin width is now 200, which gives us the original histogram. \nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 200) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")"
  },
  {
    "objectID": "activities/data_viz.html#exercise-10-histogram-follow-up",
    "href": "activities/data_viz.html#exercise-10-histogram-follow-up",
    "title": "1  Data viz (Notes)",
    "section": "Exercise 10: Histogram follow-up",
    "text": "Exercise 10: Histogram follow-up\n\nWhat function added the histogram layer / geometry? geom_histogram()\nWhat’s the difference between color and fill? color outlines the bin and fill fills in the bins\nWhy does adding color = \"white\" improve the visualization? It tells us where the bins start and end.\nWhat did binwidth do? Changes the width of the bins\nWhy does the histogram become ineffective if the binwidth is too big (e.g. 1000 feet)? It does not give us enough information.\nWhy does the histogram become ineffective if the binwidth is too small (e.g. 5 feet)? It becomes a bar chart, and because this data is continuous, putting them into small bins is not helpful."
  },
  {
    "objectID": "activities/data_viz.html#exercise-11-density-plots",
    "href": "activities/data_viz.html#exercise-11-density-plots",
    "title": "1  Data viz (Notes)",
    "section": "Exercise 11: Density plots",
    "text": "Exercise 11: Density plots\nDensity plots are essentially smooth versions of the histogram. Instead of sorting observations into discrete bins, the “density” of observations is calculated across the entire range of outcomes. The greater the number of observations, the greater the density! The density is then scaled so that the area under the density curve always equals 1 and the area under any fraction of the curve represents the fraction of cases that lie in that range.\nCheck out a density plot of elevation. Notice that the y-axis (density) has no contextual interpretation – it’s a relative measure. The higher the density, the more common are elevations in that range.\n\nggplot(hikes, aes(x = elevation)) +\n  geom_density()\n\n\n\n\nQuestions\n\nINTUITION CHECK: Before tweaking the code and thinking back to geom_bar() and geom_histogram(), how do you anticipate the following code will change the plot?\n\ngeom_density(color = \"blue\") The line (outline) will be blue\ngeom_density(fill = \"orange\") The area under the line will be orange\n\nTRY IT! Test out those lines in the chunk below. Was your intuition correct?\n\n\nggplot(hikes, aes(x = elevation)) +\n  geom_density(color= 'blue', fill='orange')\n\n\n\n\n\nExamine the density plot. How does it compare to the histogram? What does it tell you about the typical elevation, variability / range in elevations, and shape of the distribution of elevations within this range?\n\nIt tells us that the typical elevation was about 4125ft, and that the data was positively skewed."
  },
  {
    "objectID": "activities/data_viz.html#exercise-12-density-plots-vs-histograms",
    "href": "activities/data_viz.html#exercise-12-density-plots-vs-histograms",
    "title": "1  Data viz (Notes)",
    "section": "Exercise 12: Density plots vs histograms",
    "text": "Exercise 12: Density plots vs histograms\nThe histogram and density plot both allow us to visualize the behavior of a quantitative variable: typical outcome, variability / range, shape, and outliers. What are the pros/cons of each? What do you like/not like about each?\nI like that histograms let you see how skewed the data is, as well as any possible outliers without you having to go through the data table. I like that density plots tell you the proportion of values in each range (bin). I don’t like density plots because I feel they are less intuitive."
  },
  {
    "objectID": "activities/data_viz.html#exercise-13-code-communication",
    "href": "activities/data_viz.html#exercise-13-code-communication",
    "title": "1  Data viz (Notes)",
    "section": "Exercise 13: Code = communication",
    "text": "Exercise 13: Code = communication\nWe obviously won’t be done until we talk about communication. All code above has a similar general structure (where the details can change):\n\nggplot(___, aes(x = ___)) + \n  geom___(color = \"___\", fill = \"___\") + \n  labs(x = \"___\", y = \"___\")\n\n\nThough not necessary to the code working, it’s common, good practice to indent or tab the lines of code after the first line (counterexample below). Why?\n\nIt tells you that all the layers are part of the same line.\n\n# YUCK\nggplot(hikes, aes(x = elevation)) +\ngeom_histogram(color = \"white\", binwidth = 200) +\nlabs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n\n\n\n\nThough not necessary to the code working, it’s common, good practice to put a line break after each + (counterexample below). Why? It is easier to read.\n\n\n# YUCK \nggplot(hikes, aes(x = elevation)) + geom_histogram(color = \"white\", binwidth = 200) + labs(x = \"Elevation (feet)\", y = \"Number of hikes\")"
  },
  {
    "objectID": "activities/data_viz.html#exercise-14-practice",
    "href": "activities/data_viz.html#exercise-14-practice",
    "title": "1  Data viz (Notes)",
    "section": "Exercise 14: Practice",
    "text": "Exercise 14: Practice\n\nPart a\nPractice your viz skills to learn about some of the variables in one of the following datasets from the previous class:\n\n# Data on students in this class\nsurvey &lt;- read.csv(\"https://ajohns24.github.io/data/112/about_us_2024.csv\")\n\n# World Cup data\nworld_cup &lt;- read.csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-29/worldcups.csv\")\n\n\n#Brasil has won the most world cups \nggplot(world_cup, aes(x=winner))+\n  geom_bar()\n\n\n\n\n\nggplot(world_cup, aes(x=year, y=attendance))+ \n  geom_point()+\n  geom_smooth(method='lm')\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nggplot(world_cup, aes(x=games, y=attendance))+\n  geom_point()+\n  geom_smooth(method='lm')\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\nPart b\nCheck out the RStudio Data Visualization cheat sheet to learn more features of ggplot."
  },
  {
    "objectID": "activities/bivariate_viz.html#exercise-0",
    "href": "activities/bivariate_viz.html#exercise-0",
    "title": "2  Bivariate Viz",
    "section": "Exercise 0:",
    "text": "Exercise 0:\n\n# Load data\nelections &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n\n# Check it out\nhead(elections)\n\n  state_name state_abbr historical    county_name county_fips total_votes_20\n1    Alabama         AL        red Autauga County        1001          27770\n2    Alabama         AL        red Baldwin County        1003         109679\n3    Alabama         AL        red Barbour County        1005          10518\n4    Alabama         AL        red    Bibb County        1007           9595\n5    Alabama         AL        red  Blount County        1009          27588\n6    Alabama         AL        red Bullock County        1011           4613\n  repub_pct_20 dem_pct_20 winner_20 total_votes_16 repub_pct_16 dem_pct_16\n1        71.44      27.02     repub          24661        73.44      23.96\n2        76.17      22.41     repub          94090        77.35      19.57\n3        53.45      45.79     repub          10390        52.27      46.66\n4        78.43      20.70     repub           8748        76.97      21.42\n5        89.57       9.57     repub          25384        89.85       8.47\n6        24.84      74.70       dem           4701        24.23      75.09\n  winner_16 total_votes_12 repub_pct_12 dem_pct_12 winner_12 total_population\n1     repub          23909        72.63      26.58     repub            54907\n2     repub          84988        77.39      21.57     repub           187114\n3     repub          11459        48.34      51.25       dem            27321\n4     repub           8391        73.07      26.22     repub            22754\n5     repub          23980        86.49      12.35     repub            57623\n6       dem           5318        23.51      76.31       dem            10746\n  percent_white percent_black percent_asian percent_hispanic per_capita_income\n1            76            18             1                2             24571\n2            83             9             1                4             26766\n3            46            46             0                5             16829\n4            75            22             0                2             17427\n5            88             1             0                8             20730\n6            22            71             0                6             18628\n  median_rent median_age\n1         668       37.5\n2         693       41.5\n3         382       38.3\n4         351       39.4\n5         403       39.6\n6         276       39.6\n\n\n\nggplot(elections, aes(x=winner_20))+\n  geom_bar()\n\n\n\nelections %&gt;%\n  count(winner_20)\n\n  winner_20    n\n1       dem  536\n2     repub 2573\n\n\nThe republicans won about 82.8% of the counties.\n\nggplot(elections, aes(x=repub_pct_20))+\n  geom_histogram()\n\n\n\n\nI don’t understand the significance of this being negatively skewed."
  },
  {
    "objectID": "activities/bivariate_viz.html#exercise-1",
    "href": "activities/bivariate_viz.html#exercise-1",
    "title": "2  Bivariate Viz",
    "section": "Exercise 1:",
    "text": "Exercise 1:\n\nggplot(elections, aes(x=repub_pct_16, y=repub_pct_20))+ \n  geom_point()"
  },
  {
    "objectID": "activities/bivariate_viz.html#exercise-2",
    "href": "activities/bivariate_viz.html#exercise-2",
    "title": "2  Bivariate Viz",
    "section": "Exercise 2:",
    "text": "Exercise 2:\n\n# This shows the same plot as above in exercise 2, but with crosses. \nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point(color = 'orange', shape=3)+\n  geom_text(aes(label = state_abbr))"
  },
  {
    "objectID": "activities/bivariate_viz.html#exercise-3",
    "href": "activities/bivariate_viz.html#exercise-3",
    "title": "2  Bivariate Viz",
    "section": "Exercise 3:",
    "text": "Exercise 3:\nWith an increase in republican percentage in 2016, there is an increase in republican percentage in 2020. This relationship is very strong, and it is a positive relationship. A lot of counties in Texas seem to lie above the trend (positive residuals), which could be because they are more republican than the average state."
  },
  {
    "objectID": "activities/bivariate_viz.html#exercise-4-.unnumbered",
    "href": "activities/bivariate_viz.html#exercise-4-.unnumbered",
    "title": "2  Bivariate Viz",
    "section": "2.1 Exercise 4: {.unnumbered} :",
    "text": "2.1 Exercise 4: {.unnumbered} :\n\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_smooth()\n\n\n\n\n\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n\n\n\n\n# Scatterplot of repub_pct_20 vs median_rent\nggplot(elections, aes(x = median_rent, y = repub_pct_20)) +\n  geom_point() \n\n\n\n# Scatterplot of repub_pct_20 vs median_age\nggplot(elections, aes(x = median_age, y = repub_pct_20)) +\n  geom_point() \n\n\n\n\nMedian rent seems to explain repub_pct_20 better: as median rent rises, repub_pct_20 seems to fall, suggesting a moderate negative relationship. Median age does not seem to explain repub_pct_20 very well."
  },
  {
    "objectID": "activities/bivariate_viz.html#exercise-6",
    "href": "activities/bivariate_viz.html#exercise-6",
    "title": "2  Bivariate Viz",
    "section": "Exercise 6:",
    "text": "Exercise 6:\n\nggplot(elections, aes(y = repub_pct_20, x = historical)) +\n  geom_point()\n\n\n\n\nA scatterplot is very useful for 2 quantitative variables. Historical seems to be a categorical variable with 3 categories, so a boxplot would be a better idea."
  },
  {
    "objectID": "activities/bivariate_viz.html#exercise-7",
    "href": "activities/bivariate_viz.html#exercise-7",
    "title": "2  Bivariate Viz",
    "section": "Exercise 7:",
    "text": "Exercise 7:\n\nggplot(elections, aes(y = repub_pct_20, x = historical)) +\n  geom_violin()\n\n\n\n\n\nggplot(elections, aes(y = repub_pct_20, x = historical)) +\n  geom_boxplot()\n\n\n\n\nThis tells us that if a county was historically democrat, people voted less republican in 2020 than if the country was historically purple, which is less than if the county was historically red."
  },
  {
    "objectID": "activities/bivariate_viz.html#exercise-8",
    "href": "activities/bivariate_viz.html#exercise-8",
    "title": "2  Bivariate Viz",
    "section": "Exercise 8:",
    "text": "Exercise 8:\n\nggplot(elections, aes(x = repub_pct_20, fill=historical)) +\n  geom_density(alpha=0.5)"
  },
  {
    "objectID": "activities/bivariate_viz.html#exercise-9-.unnumbered",
    "href": "activities/bivariate_viz.html#exercise-9-.unnumbered",
    "title": "2  Bivariate Viz",
    "section": "2.2 Exercise 9: {.unnumbered} :",
    "text": "2.2 Exercise 9: {.unnumbered} :\n\n# Name two \"bad\" things about this plot\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density()\n\n\n\n\n\nIt is opaque, so I can’t see part of the data (for the green and red plots).\nThe colors do not correspond to the colors they are representing (red is blue, blue is red)\n\n\n# What does scale_fill_manual do?\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density() +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))\n\n\n\n\nThis fixes the second issue with this! The colors correspond to the category they are representing.\n\n# What does alpha = 0.5 do?\n# Play around with different values of alpha, between 0 and 1\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density(alpha = 0.5) +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))\n\n\n\n\nThis fixes the first issue I had with the plot! It increases its transparency.\n\n# What does facet_wrap do?!\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density() +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\")) +\n  facet_wrap(~ historical)\n\n\n\n\nIt makes each of the categories into separate small graphs, while using the same axes.\n\n# Let's try a similar grouping strategy with a histogram instead of density plot.\n# Why is this terrible?\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_histogram(color = \"white\") +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))\n\n\n\n\nThis uses a histogram, which is difficult to understand because there is so much information."
  },
  {
    "objectID": "activities/bivariate_viz.html#exercise-10",
    "href": "activities/bivariate_viz.html#exercise-10",
    "title": "2  Bivariate Viz",
    "section": "Exercise 10:",
    "text": "Exercise 10:\n\nWhich do you like best? Side-by-side boxplots\nWhat is one pro of density plots relative to boxplots? It gives you a visual representation of how skewed the data is\nWhat is one con of density plots relative to boxplots? It does not give you any numerical summaries (IQR, median)"
  },
  {
    "objectID": "activities/bivariate_viz.html#exercise-11",
    "href": "activities/bivariate_viz.html#exercise-11",
    "title": "2  Bivariate Viz",
    "section": "Exercise 11:",
    "text": "Exercise 11:\n\nggplot(elections, aes(x=historical, fill=winner_20))+\n  geom_bar()\n\n\n\n\n\nggplot(elections, aes(x=winner_20, fill=historical))+\n  geom_bar()+\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))+\n  facet_wrap(~ historical)"
  },
  {
    "objectID": "activities/bivariate_viz.html#exercise-12",
    "href": "activities/bivariate_viz.html#exercise-12",
    "title": "2  Bivariate Viz",
    "section": "Exercise 12:",
    "text": "Exercise 12:\n\n# A stacked bar plot\n# How are the \"historical\" and \"winner_20\" variables mapped to the plot, i.e. what roles do they play?\nggplot(elections, aes(x = historical, fill = winner_20)) +\n  geom_bar()\n\n\n\n\n\n# A faceted bar plot\nggplot(elections, aes(x = winner_20)) +\n  geom_bar() +\n  facet_wrap(~ historical)\n\n\n\n\n\n# A side-by-side bar plot\n# Note the new argument to geom_bar\nggplot(elections, aes(x = historical, fill = winner_20)) +\n  geom_bar(position = \"dodge\")\n\n\n\n\n\n# A proportional bar plot\n# Note the new argument to geom_bar\nggplot(elections, aes(x = historical, fill = winner_20)) +\n  geom_bar(position = \"fill\")\n\n\n\n\nPart a: An advantage to using a proportional bar chart is that it gives us a proportion of the numbers who voted democrat or republican within each historical category, instead of the raw number. A disadvantage to using a proportional bar chart is that you don’t know the raw count of the people who voted democrat or republican within each category- we loose data, because we don’t know which category voted most frequently, just the proportion with which they voted.\nPart b: I like side-by-side bar charts (the third graph) because it is easy to follow and understand, the categories are grouped together, and I can see the raw count of votes for each party."
  },
  {
    "objectID": "activities/bivariate_viz.html#exercise-13",
    "href": "activities/bivariate_viz.html#exercise-13",
    "title": "2  Bivariate Viz",
    "section": "Exercise 13:",
    "text": "Exercise 13:\n\nweather &lt;- read.csv(\"https://mac-stat.github.io/data/weather_3_locations.csv\")\n\n\n# How do 3pm temperatures (temp3pm) differ by location?\nggplot(weather, aes(x=location, y=temp3pm))+ \n  geom_boxplot()\n\n\n\n\nThe location variable is categorical: there are 3 categories. The temp3pm variable is quantitative. Hence, a boxplot or violin plot would be best at representing this data.\n\n# How might we predict the 3pm temperature (temp3pm) by the 9am temperature (temp9am)?\nggplot(weather, aes(x=temp9am, y=temp3pm))+\n  geom_point()+\n  geom_smooth()\n\n\n\n\nBoth of these variables are quantitative, so a scatterplot would be best\n\n# How do the number of rainy days (raintoday) differ by location?\nggplot(weather, aes(x=location, fill=raintoday))+ \n  geom_bar()\n\n\n\n\nBoth are categorical variables."
  },
  {
    "objectID": "activities/multivariate_viz.html",
    "href": "activities/multivariate_viz.html",
    "title": "3  Multivariate Viz",
    "section": "",
    "text": "library(dplyr)\nlibrary(tidyverse)\nlibrary(ggplot2)\n\n\nThe story\nThough far from a perfect assessment of academic preparedness, SAT scores have historically been used as one measurement of a state’s education system. The education dataset contains various education variables for each state:\n\n# Import and check out data\neducation &lt;- read.csv(\"https://mac-stat.github.io/data/sat.csv\")\nhead(education)\n\n       State expend ratio salary frac verbal math  sat  fracCat\n1    Alabama  4.405  17.2 31.144    8    491  538 1029   (0,15]\n2     Alaska  8.963  17.6 47.951   47    445  489  934 (45,100]\n3    Arizona  4.778  19.3 32.175   27    448  496  944  (15,45]\n4   Arkansas  4.459  17.1 28.934    6    482  523 1005   (0,15]\n5 California  4.992  24.0 41.078   45    417  485  902  (15,45]\n6   Colorado  5.443  18.4 34.571   29    462  518  980  (15,45]\n\n\nA codebook is provided by Danny Kaplan who also made these data accessible:\n\n\n\nExercise 1: SAT scores\n\nPart a\nConstruct a plot of how the average sat scores vary from state to state. (Just use 1 variable – sat not State!)\n\nggplot(education, aes(x=sat))+\n  geom_histogram(bindwidth=20)\n\n\n\n\n\n\nPart b\nSummarize your observations from the plot. Comment on the basics: range, typical outcomes, shape. (Any theories about what might explain this non-normal shape?)\nThe average SAT score ranges from 800 to 1150. The data seems to be unimodal, with the mode at about 890. The data is positively skewed.\n\n\n\nExercise 2: SAT Scores vs Per Pupil Spending & SAT Scores vs Salaries\nThe first question we’d like to answer is: Can the variability in sat scores from state to state be partially explained by how much a state spends on education, specifically its per pupil spending (expend) and typical teacher salary?\n\nPart a\n\n# Construct a plot of sat vs expend\nggplot(education, aes(x=expend, y=sat))+\n  geom_point()+\n  geom_smooth(method='lm')\n\n\n\n\n\n# Construct a plot of sat vs salary\nggplot(education, aes(x=salary, y=sat))+\n  geom_point()+\n  geom_smooth(method='lm')\n\n\n\n\n\n\nPart b\nWhat are the relationship trends between SAT scores and spending? Is there anything that surprises you?\nIt is surprising: as expenditure per pupil increase, the average sat score seems to reduce.\n\n\n\nExercise 3: SAT Scores vs Per Pupil Spending and Teacher Salaries\nConstruct one visualization of the relationship of sat with salary and expend. HINT: Start with just 2 variables and tweak that code to add the third variable. Try out a few things!\n\nggplot(education, aes(x=expend, y=sat, color=salary))+\n  geom_point()\n\n\n\n\n\n\nExercise 4: Another way to Incorporate Scale\nIt can be tough to distinguish color scales and size scales for quantitative variables. Another option is to discretize a quantitative variable, or basically cut it up into categories.\nConstruct the plot below. Check out the code and think about what’s happening here. What happens if you change “2” to “3”?\n\nggplot(education, aes(y = sat, x = salary, color = cut(expend, 2))) + \n  geom_point() + \n  geom_smooth(se = FALSE, method = \"lm\")\n\nIt cuts into 3 parts if you change 2 to 3: the general syntax for cut is cut(var_to_cut, number_of_cuts)\nDescribe the trivariate relationship between sat, salary, and expend.\nWith an increase in teacher salary, the expenditure per student also increases. As these two explanatory variables increase, the SAT score decreases: first steeply, and then more gradually.\n\n\nExercise 5: Finally an Explanation\nIt’s strange that SAT scores seem to decrease with spending. But we’re leaving out an important variable from our analysis: the fraction of a state’s students that actually take the SAT. The fracCat variable indicates this fraction: low (under 15% take the SAT), medium (15-45% take the SAT), and high (at least 45% take the SAT).\n\nPart a\nBuild a univariate viz of fracCat to better understand how many states fall into each category.\n\nggplot(education, aes(x=fracCat))+\n  geom_bar()\n\n\n\n\nThe number of states that fall into the category of 15% or less students take the SAT is about 21. The number of states that fall into the category of 15% to 45% of students take the SAT is about 7. The number of states that fall into the category of 45% to 100% of students take the SAT is about 22.\n\n\nPart b\nBuild 2 bivariate visualizations that demonstrate the relationship between sat and fracCat. What story does your graphic tell and why does this make contextual sense?\n\nggplot(education, aes(x=fracCat, y=sat))+\n  geom_boxplot()\n\n\n\n\nWhen the fraction of students that take the sat is lesser, the median average SAT score is higher.\n\n\nPart c\nMake a trivariate visualization that demonstrates the relationship of sat with expend AND fracCat. Highlight the differences in fracCat groups through color AND unique trend lines. What story does your graphic tell?\nDoes it still seem that SAT scores decrease as spending increases?\n\n\nPart d\nPutting all of this together, explain this example of Simpson’s Paradox. That is, why did it appear that SAT scores decrease as spending increases even though the opposite is true?\n\n\n\nExercise 5: Finally an Explanation\n\nPart a\n\nggplot(education, aes(x = fracCat)) + \n  geom_bar()\n\n\n\n\n\n\nPart b\nThe more students in a state that take the SAT, the lower the average scores tend to be. This is probably related to self-selection.\n\nggplot(education, aes(x = sat, fill = fracCat)) + \n  geom_density(alpha = 0.5)\n\n\n\n\n\n\nPart c\nWhen we control for the fraction of students that take the SAT, SAT scores increase with expenditure.\n\nggplot(education, aes(y = sat, x = expend, color = fracCat)) + \n  geom_point() + \n  geom_smooth(method = \"lm\")\n\n\n\n\nThus, fracCat seems to be a confounding variable that conforms to Simpson’s paradox (switch the relationship between expend and sat).\n\n\nPart d\nStudent participation tends to be lower among states with lower expenditures (which are likely also the states with higher ed institutions that haven’t historically required the SAT). Those same states tend to have higher SAT scores because of the self-selection of who participates."
  },
  {
    "objectID": "notes/README.html",
    "href": "notes/README.html",
    "title": "Notes",
    "section": "",
    "text": "All notes live here."
  },
  {
    "objectID": "notes/Chapter-2.html",
    "href": "notes/Chapter-2.html",
    "title": "4  Chapter 2",
    "section": "",
    "text": "Quarto knits to a qmd and it makes documents far prettier than just knitting to an rmd. Quarto is the newest version of Rmarkdown\nQuarto supports multiple languages (python, Javascript, Julia, R)\nDon’t use the console unless you are doing calculations and looking for help\nTo make something bold use two ** surrounding the phrase.\nTo italicize something, use one * around the phrase (or _ around)\nMake sure to space out your code and comment your R-chunks\nCamelCase is like this thisVariableCapitalizesTheFirstLetterExceptTheFirst\nSnake case is like this this_is_snake_case\nwordsOnTheScreen is used to link to an image"
  },
  {
    "objectID": "notes/Chapter-3.html",
    "href": "notes/Chapter-3.html",
    "title": "5  Chapter 3",
    "section": "",
    "text": "Data visualization lets you find outliers, look at the shape of the data, and identify trends. Keep in mind when creating a graphic:\n\nAxes variables and names\nColors & Themes: make is accessibility friendly\nFacets\nScale + floating axes\nLayers: how many lines, points, bars\n\nTo do this in R, we use the package ggplot2."
  },
  {
    "objectID": "notes/Chapter-4.html",
    "href": "notes/Chapter-4.html",
    "title": "6  Chapter 4",
    "section": "",
    "text": "Bivariate visualizations look at relationships between variables. You look at the effect of the predictor (x) variables on the response (y) variable. You can use these visualizations to find:\n\nTrends\nStrength of correlation\nOutliers\n\nBasic notes:\n\nEvery quantitative variable needs a new axis\nEvery categorical variable needs a new way to group (color, facet, shapes, etc.)\nIf you have overlapping lines, play with alpha (transparency) and facets"
  },
  {
    "objectID": "notes/Chapter-5.html",
    "href": "notes/Chapter-5.html",
    "title": "7  Chapter 5",
    "section": "",
    "text": "library(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.5\n✔ ggplot2   3.4.4     ✔ stringr   1.5.1\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\n\n\nweather &lt;- read.csv(\"https://mac-stat.github.io/data/weather_3_locations.csv\") %&gt;% \n  mutate(date = as.Date(date)) \n\nTo make a stacked bar chart:\n\nwoll &lt;- weather %&gt;%\n  filter(location == \"Wollongong\") %&gt;% \n  mutate(date = as.Date(date))  \n\n\n# Default: stacked bars\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar()\n\n\n\n\nTo make side-by-side bar charts:\n\n# Side-by-side bars\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"dodge\")\n\n\n\n\nProportional bar charts:\n\n# Proportional bars\n# position = \"fill\" refers to filling the frame, nothing to do with the color-related fill\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"fill\")\n\n\n\n\nTo visualize 3 variables:\n\nPlay with alpha\nPlay with colors\nPlay with facets\nAdd an axis\n\nIf you have 3 variables, how do you represent: - 3 categorical variables: Use a stacked bar chart with color, with facets - 2 categorical and 1 numerical: Use a stacked density plot with color, with facets (or histogram, density, violin) - 2 numerical and 1 categorical: Use a scatterplot with color or facets (categorical) (or heatmap or star) - 3 numerical: Use a scatterplot with a discrete/ binned version of the 3rd numerical variable and change the color, shape, size, or transparency"
  }
]