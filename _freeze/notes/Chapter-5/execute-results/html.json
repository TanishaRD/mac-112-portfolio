{
  "hash": "5cf4b503ecf4b0aeef3a03c13c803caa",
  "result": {
    "markdown": "---\ntitle: \"Chapter 5\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.5\n✔ ggplot2   3.4.4     ✔ stringr   1.5.1\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nweather <- read.csv(\"https://mac-stat.github.io/data/weather_3_locations.csv\") %>% \n  mutate(date = as.Date(date)) \n```\n:::\n\n\nTo make a stacked bar chart:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwoll <- weather %>%\n  filter(location == \"Wollongong\") %>% \n  mutate(date = as.Date(date))  \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Default: stacked bars\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](Chapter-5_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nTo make side-by-side bar charts: \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Side-by-side bars\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](Chapter-5_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nProportional bar charts: \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Proportional bars\n# position = \"fill\" refers to filling the frame, nothing to do with the color-related fill\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"fill\")\n```\n\n::: {.cell-output-display}\n![](Chapter-5_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nTo visualize 3 variables: \n\n- Play with alpha \n- Play with colors \n- Play with facets \n- Add an axis \n\nIf you have 3 variables, how do you represent: \n- 3 categorical variables: Use a stacked bar chart with color, with facets \n- 2 categorical and 1 numerical: Use a stacked density plot with color, with facets (or histogram, density, violin)\n- 2 numerical and 1 categorical: Use a scatterplot with color or facets (categorical) (or heatmap or star)\n- 3 numerical: Use a scatterplot with a discrete/ binned version of the 3rd numerical variable and change the color, shape, size, or transparency \n",
    "supporting": [
      "Chapter-5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}